package com.moviebookingapp.techacadeemy.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.moviebookingapp.techacadeemy.entities.Movie;
import com.moviebookingapp.techacadeemy.entities.Ticket;
import com.moviebookingapp.techacadeemy.payload.response.MessageResponse;
import com.moviebookingapp.techacadeemy.services.MoviesService;
import com.moviebookingapp.techacadeemy.services.TicketsService;

@RestController
@RequestMapping("/api/v1.0/moviebooking")
public class MovieController {
	@Autowired
	private MoviesService moviesService;

	@Autowired
	private TicketsService ticketsService;

	@GetMapping("/all")
	public List<Movie> getAllMovies() {
		return moviesService.getAllMovies();
	}

	@PostMapping("/addMovie")
	public ResponseEntity<?> addMovie(@RequestBody Movie movieModel) {
		Movie movie = moviesService.saveMovies(movieModel);
		if (movie != null)
			return ResponseEntity.ok().body(new MessageResponse("Movie added successfully"));
		else
			return ResponseEntity.badRequest().body(new MessageResponse("Error: Movie could;t be added"));

	}

	@GetMapping("/movies/search/{moviename}")
	public ResponseEntity<?> searchMovies(@PathVariable String moviename) {
		return moviesService.getMoviesByName(moviename);

	}

	@PostMapping("/{moviename}/add")
	public ResponseEntity<?> addMovie(@PathVariable String moviename, @RequestBody Ticket tickets) {
		return moviesService.bookTicketByMovieName(moviename, tickets);
	}

	@PutMapping("/{moviename}/update/{ticketId}")
	public ResponseEntity<?> updateTicketStatus(@PathVariable String moviename, @PathVariable String ticketId) {
		return moviesService.updateTicketStatus(moviename, ticketId);
	}

	@DeleteMapping("/{moviename}/delete/{ticketId}")
	public ResponseEntity<?> deleteMovie(@PathVariable String moviename, @PathVariable String ticketId) {
		return moviesService.deleteMoviesByNameId(moviename, ticketId);
	}
}
