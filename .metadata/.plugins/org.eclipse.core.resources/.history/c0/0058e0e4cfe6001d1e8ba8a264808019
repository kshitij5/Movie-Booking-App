package com.moviebookingapp.techacadeemy.services;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;

import com.moviebookingapp.techacadeemy.entities.Movie;
import com.moviebookingapp.techacadeemy.entities.Ticket;
import com.moviebookingapp.techacadeemy.payload.response.MessageResponse;
import com.moviebookingapp.techacadeemy.repository.MovieRepository;

public class MoviesServiceImpl implements MoviesService {
	
	@Autowired
	private MovieRepository movieRepository;

	@Override
	public List<Movie> getAllMovies() {
		return movieRepository.findAll();
	}

	@Override
	public ResponseEntity<?> getMoviesByName(String moviename) {
		if (movieRepository.existsByMovieNameContainingIgnoreCase(moviename)) {
			Movie movieModel = movieRepository
					.findByMovieNameContainingIgnoreCase(moviename);
			return ResponseEntity.ok().body(movieModel);
		} else
			return ResponseEntity.badRequest().body(new MessageResponse("Error: Movie doesn't exist in Database"));
	}

	@Override
	public ResponseEntity<?> updateTicketStatus(String moviename, String ticketId) {

		if (!movieRepository.existsByMovieNameContainingIgnoreCase(moviename))
			return ResponseEntity.badRequest().body(new MessageResponse("Error: Movie doesn't exist in Database"));

		Movie movieModel = movieRepository.findByMovieNameContainingIgnoreCase(moviename);
//		movieModel.setTicketStatus(ticket);
		

		movieRepository.save(movieModel);
		return ResponseEntity.ok().body(new MessageResponse("Ticket status updated successflly"));

	}

	@Override
	public ResponseEntity<?> deleteMoviesByNameId(String moviename, String id) {
		if (!movieRepository.existsByMovieNameContainingIgnoreCase(moviename))
			return ResponseEntity.badRequest().body(new MessageResponse("Error: Movie doesn't exist in Database"));
		movieRepository.deleteById(id);
		return ResponseEntity.ok().body(new MessageResponse("Movie deleted successflly"));
	}

	@Override
	public Movie saveMovies(Movie movieModel) {
		return movieRepository.save(movieModel);
	}

	@Override
	public ResponseEntity<?> bookTicketByMovieName(String moviename, Ticket tickets) {
		if (!movieRepository.existsByMovieNameContainingIgnoreCase(moviename))
			return ResponseEntity.badRequest().body(new MessageResponse("Error: Movie doesn't exist in Database"));

		Movie movieModel = movieRepository.findByMovieNameContainingIgnoreCase(moviename);
		if (!movieModel.getTicketStatus().equals("BOOK ASAP"))
			return ResponseEntity.badRequest().body(new MessageResponse("Error: No tickets available for the movie"));

		if (movieModel.getNumberOfTickets() < tickets.getNoOfTickets()) {
			return ResponseEntity.badRequest().body(new MessageResponse(
					"Error: Only " + movieModel.getNumberOfTickets() + " tickets available for the movie"));
		}

		movieModel.setNumberOfTickets((movieModel.getNumberOfTickets() - tickets.getNoOfTickets()));

		movieRepository.save(movieModel);
		ticketRepository.save(tickets);
		return ResponseEntity.ok().body(new MessageResponse("Movie booked successfully"));

	}

}
